services:
  backend:
    container_name: backend
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
      - .:/backend:delegated
      - /backend/node_modules
    depends_on:
      - db
      - redis
      - pgadmin
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?schema=${DATABASE_SCHEMA}
    # command: >
    #   sh -c "./wait-for-it.sh db:5432 -- npm run start"
    command: "npm run start:dev"

  db:
    image: postgres:latest
    env_file:
      - .env
    restart: always
    container_name: db
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_SCHEMA=${DATABASE_SCHEMA}
      - POSTGRES_HOST_AUTH_METHOD=trust

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    restart: always
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  dbdata:
